function init(self)
	msg.post(".", "acquire_input_focus")
	local rightshoulder = "rightshoulder#collisionobject"
	local rightupperarm = "rightupperarm#collisionobject"
	local rightlowerarm = "rightlowerarm#collisionobject"
	local righthand = "righthand#collisionobject"
	
	physics.create_joint(
		physics.JOINT_TYPE_HINGE,
		rightshoulder,
		"rightshoulder",
		vmath.vector3(0),
		rightupperarm,
		vmath.vector3(-7, 60, 0))

	physics.create_joint(
		physics.JOINT_TYPE_HINGE,
		rightupperarm,
		"rightupperarm",
		vmath.vector3(-8, -60, 0),
		rightlowerarm,
		vmath.vector3(-9, 60, 0))

	physics.create_joint(
		physics.JOINT_TYPE_FIXED,
		righthand,
		"righthand",
		vmath.vector3(0, 0, 0),
		rightlowerarm,
		vmath.vector3(0, -60, 0),
		{ max_length = 10 })
				
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	local pos = vmath.vector3(action.x, action.y, 0)
	go.set_position(pos, "righthand")
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
